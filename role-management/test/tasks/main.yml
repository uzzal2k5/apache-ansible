- name: Set fact for config to test
  set_fact:
    apache_conf_to_test:  "{{ APACHE_CONFIG }}"

- name: Apache | test Updated hosts
  template:
    src: config-test.conf.j2
    dest: "{{COMMON_DIR}}/config-test.conf"
    owner: "{{ APACHE_USER }}"
    group: "{{ APACHE_USER }}"
    mode: "0644"
    validate: 'apachectl -t -f %s'
  register: Apache_Result
  when: VirtualHost_update.changed
  ignore_errors: yes

- name: Clear out test Config file
  file:
    path: "{{COMMON_DIR}}/config-test.conf"
    state: absent
  when:  Apache_Result|success



- name: Test VirtualHost Configuration
  shell: /usr/sbin/apache2ctl configtest

- name: "Check Listening"
  ansible.builtin.wait_for:
    port: 80
    state: "started"
    timeout: 300

- name: "Check Listening"
  ansible.builtin.wait_for:
    port: 443
    state: "started"
    timeout: 300

# - name: Wait for server to pass health-checks
#   health_check:
#     url: "https://{{ SUBDOMAIN }}.{{ DOMAIN_NAME }}"
#     validate_certs: no
#   delegate_to: 127.0.0.1

- name: "Check Working"
  ansible.builtin.uri:
    url: "https://{{ SUBDOMAIN }}.{{ DOMAIN_NAME }}"
    validate_certs: no
  delegate_to: "localhost"

- name: "Check Working"
  ansible.builtin.uri:
    url: "https://{{ SUBDOMAIN }}.{{ DOMAIN_NAME }}"
    return_content: true
    validate_certs: no
  delegate_to: "localhost"
  register: "r_working"

- name: "Check Content"
  ansible.builtin.assert:
    that: "'My cool WebPage' is in r_working.content"

- name: Healthcheck | Wait for substitution application to be healthy
  uri:
    url: "https://{{ SUBDOMAIN }}.{{ DOMAIN_NAME }}"
    method: GET
    status_code: 200
    validate_certs: no
  register: result
  untill: result.status == 200
  retries: "10"
  delay: "4"
  when: substitution_healthcheck_url is defined
- include: endpoint.yml
